{"version":3,"file":"dev-console-widget.js","sourceRoot":"","sources":["src/dev-console-widget.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAEH,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAC,MAAM,mBAAmB,CAAC;AACjE,OAAO,mCAAmC,CAAA;AAC1C,OAAO,0CAA0C,CAAA;AACjD,OAAO,EAAE,OAAO,EAAE,MAAM,eAAe,CAAC;AACxC;;;;GAIG;AAEH,IAAa,gBAAgB,GAA7B,MAAa,gBAAiB,SAAQ,UAAU;IAAhD;;QAoDE,qBAAgB,GAAG,MAAM,CAAA;QAGzB,sBAAiB,GAAQ,EAAE,CAAC;IAwC9B,CAAC;IAhDS,iBAAiB;QACxB,KAAK,CAAC,iBAAiB,EAAE,CAAA;QACzB,IAAI,CAAC,SAAS,EAAE,CAAC;IACpB,CAAC;IAOC,KAAK,CAAC,SAAS;QACb,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,yBAAyB,IAAI,CAAC,gBAAgB,OAAO,CAAC,CAAC;QAC/E,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;QAE9B,IAAI,CAAC,iBAAiB,GAAG,EAAC,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,IAAI,EAAC,CAAA;IACrF,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;;;UAGL,OAAO;;;uEAGsD,IAAI,CAAC,eAAe;;;cAG7E,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAChD,IAAI,CAAA;+DAC6C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC;eAC7F,CACF,CAAA,CAAC,CAAA,CACA,IAAI,CAAA;;eAEH,CACF;;;;KAIR,CAAC;IACJ,CAAC;IAEO,eAAe,CAAC,CAAa;QACnC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC;QAC3C,IAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAC;YAChD,IAAI,CAAC,SAAS,EAAE,CAAA;SACjB;IACH,CAAC;CACF,CAAA;AA9FiB,uBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4C1B,CAAA;AAOF;IADC,QAAQ,EAAE;0DACc;AAGzB;IADC,KAAK,EAAE;2DACoB;AAvDjB,gBAAgB;IAD5B,aAAa,CAAC,oBAAoB,CAAC;GACvB,gBAAgB,CA+F5B;SA/FY,gBAAgB","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {LitElement, html, css} from 'lit';\nimport {customElement, property, state} from 'lit/decorators.js';\nimport \"./components/dev-console-products\"\nimport \"./components/dev-console-product-details\"\nimport { gridSvg } from './assets/grid';\n/**\n * @fires count-changed - Indicates when the count changes\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('dev-console-widget')\nexport class DevConsoleWidget extends LitElement {\n  static override styles = css`\n    .console-widget {\n      font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    height: 100%;\n    }\n    .console-widget-dropdown-menu {\n      position: absolute;\n      display: none;\n      z-index: 20;\n      left: 0;\n      top: 100%;\n      width: 100%;\n      font-size: 0.875rem /* 14px */;\n      line-height: 1.25rem /* 20px */;\n      font-weight: 600;\n      box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.15);\n      cursor: default;\n    }\n    .console-widget:hover .console-widget-dropdown-menu {\n      display: block;\n    }\n    .console-widget-menu-container {\n      min-height: auto;\n      display: flex;\n      align-items: start;\n      background-color: rgb(255 255 255);\n      strong {\n        color: rgb(0 0 0);\n      }\n      > * {\n        margin-left: 2rem;\n        height: 552px;\n        overflow-y: auto;\n      }\n      > *:first-child {\n        margin-left: 0rem;\n        border-right: 1px solid rgba(152, 162, 179, 0.3);\n      }\n    }\n  `;\n \n override connectedCallback(): void {\n   super.connectedCallback()\n   this.fetchData();\n}\n  @property()\n  activeProductKey = 'apex'\n\n  @state()\n  productDetailsMap: any = {};\n\n  async fetchData(){\n    const res = await fetch(`./products-mock-jsons/${this.activeProductKey}.json`);\n    const data = await res.json();\n    \n    this.productDetailsMap = {...this.productDetailsMap, [this.activeProductKey]: data}\n  }\n\n  override render() {\n    return html`\n      <div class=\"console-widget\">\n       <!-- <div> -->\n        ${gridSvg}\n        <!-- </div> -->\n        <div class=\"console-widget-dropdown-menu\">\n          <div class=\"console-widget-menu-container\"  @productSelect=${this._selectListener}>\n            <dev-console-products></dev-console-products>\n\n            ${this.productDetailsMap[this.activeProductKey] ? (\n              html`\n                <dev-console-product-details .productDetails=${this.productDetailsMap[this.activeProductKey]}></dev-console-product-details>\n              `\n            ):(\n              html`\n                <span>Loading...</span>\n              `\n            )}\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  private _selectListener(e:CustomEvent){\n    this.activeProductKey = e.detail.uniqueKey;\n    if(!this.productDetailsMap[this.activeProductKey]){\n      this.fetchData()\n    } \n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'dev-console-widget': DevConsoleWidget;\n  }\n}\n"]}